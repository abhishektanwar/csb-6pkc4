{"version":3,"sources":["App.js","index.js"],"names":["emojiMeanings","emojisWeKnow","Object","keys","App","useState","meaning","setMeaning","className","onChange","event","userInput","target","value","undefined","map","emoji","onClick","emojiClickHandler","style","fontSize","padding","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJAGIA,EAAgB,CAClB,eAAM,gBACN,eAAM,+BACN,eAAM,gDACN,eAAM,kCACN,eAAM,0BAGJC,EAAeC,OAAOC,KAAKH,GAEhB,SAASI,IAAO,IAAD,EACEC,mBAAS,IADX,mBACrBC,EADqB,KACZC,EADY,OAEUF,mBAAS,GAFnB,gCAGQA,mBAAS,KAHjB,6BA4B5B,OACE,sBAAKG,UAAU,MAAf,UACE,4CAEA,uBAAOC,SAnBX,SAA2BC,GACzB,IAAIC,EAAYD,EAAME,OAAOC,MACzBP,EAAUN,EAAcW,QAEZG,IAAZR,IACFA,EAAU,qCAEZC,EAAWD,MAaT,0CAAaA,KAEb,gDACCL,EAAac,KAAI,SAAUC,GAC1B,OACE,sBACEC,QAAS,kBAhBnB,SAA2BD,GAEzBT,EADcP,EAAcgB,IAeLE,CAAkBF,IAEjCG,MAAO,CAAEC,SAAU,OAAQC,QAAS,QAHtC,SAKGL,GAHIA,SChDjB,IAAMM,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACtB,EAAD,MAEFkB,I","file":"static/js/main.80dd9ba3.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\n\nvar emojiMeanings = {\n  \"üòÄ\": \"Grinning Face\",\n  \"üòÉ\": \"Smiling Face With Open Mouth\",\n  \"üòÑ\": \"Smiling Face With Open Mouth And Smiling Eyes\",\n  \"üòÅ\": \"Grinning Face With Smiling Eyes\",\n  \"üòÇ\": \"Face With Tears of Joy\"\n};\n\nvar emojisWeKnow = Object.keys(emojiMeanings);\n\nexport default function App() {\n  const [meaning, setMeaning] = useState(\"\");\n  const [likeCounter, setLikeCounter] = useState(0);\n  const [inputValue, setInputValue] = useState(\"\");\n  function likeClickHandler() {\n    // var newLikeCounter = likeCounter + 1;\n    setLikeCounter(likeCounter + 1);\n  }\n  // function inputChangeHandler(event) {\n  //   console.log(event.target.value);\n  //   setInputValue(event.target.value);\n  // }\n\n  function emojiInputHandler(event) {\n    var userInput = event.target.value;\n    var meaning = emojiMeanings[userInput];\n\n    if (meaning === undefined) {\n      meaning = \"we dont have this in our database\";\n    }\n    setMeaning(meaning);\n  }\n\n  function emojiClickHandler(emoji) {\n    var meaning = emojiMeanings[emoji];\n    setMeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>inside out</h1>\n      {/* <button onClick={likeClickHandler}>Like me</button> {likeCounter} */}\n      <input onChange={emojiInputHandler}></input>\n      <h2>Meaning {meaning}</h2>\n\n      <h3>emojis we know</h3>\n      {emojisWeKnow.map(function (emoji) {\n        return (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            key={emoji}\n            style={{ fontSize: \"2rem\", padding: \"1rem\" }}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}